{"version":3,"file":"static/js/339.a49b1648.chunk.js","mappings":"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","sources":["components/ButtonWithLoader/index.js","hooks/useAuth.js","validators/signUpSchema.js","pages/SignUp/index.js"],"sourcesContent":["import React from \"react\";\n\nconst ButtonWithLoader = ({\n  isLoading,\n  className,\n  disabled,\n  onClick,\n  children,\n  bgColor = \"bg-customGreen\",\n  spinnerColor = \"border-white\",\n}) => {\n  return (\n    <button\n      className={`${bgColor} hover:${bgColor} text-white font-bold mt-[20px] py-2 px-4 rounded w-full flex justify-center items-center text-[22px] ${className}`}\n      disabled={isLoading || disabled}\n      onClick={onClick}\n    >\n      {isLoading ? (\n        <div className=\"flex justify-center items-center\">\n          <svg\n            className={`animate-spin h-5 w-5 border-2 ${spinnerColor} border-opacity-50 border-t-transparent rounded-full`}\n            viewBox=\"0 0 24 24\"\n          ></svg>\n        </div>\n      ) : (\n        children\n      )}\n    </button>\n  );\n};\n\nexport default ButtonWithLoader;\n","import { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\n// const getToken = () => {\n//   return localStorage.getItem(\"accessToken\");\n// };\n\nconst useAuth = () => {\n  // const navigate = useNavigate();\n  // useEffect(() => {\n  //   const token = getToken();\n  //   if (!token) {\n  //     navigate(\"/signin\");\n  //   }\n  // }, [navigate]);\n};\n\nconst useUnauth = () => {\n  // const navigate = useNavigate();\n  // useEffect(() => {\n  //   const token = getToken();\n  //   if (token) {\n  //     navigate(\"/dashboard\");\n  //   }\n  // }, [navigate]);\n};\n\nexport { useAuth, useUnauth };\n","import * as yup from \"yup\";\n\nconst signupSchema = yup\n  .object({\n    full_name: yup.string().required(\"Full name is required\"),\n    email: yup\n      .string()\n      .email(\"Enter a valid email\")\n      .required(\"Email is required\"),\n    password: yup\n      .string()\n      .min(6, \"Password must be at least 6 characters\")\n      .required(\"Password is required\"),\n    confirm_password: yup\n      .string()\n      .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\n      .required(\"Confirm password is required\"),\n  })\n  .required();\n\nexport default signupSchema;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport { Toast } from \"../../utils/Toasts\";\nimport { sendOtp, checkEmailExists } from \"../../redux/slices/authSlice\";\nimport { ReactComponent as BackArrow } from \"../../assets/back.svg\";\nimport { ReactComponent as EmailSvg } from \"../../assets/email.svg\";\nimport { ReactComponent as PasswordSvg } from \"../../assets/password.svg\";\nimport InputWithIcon from \"../../components/InputWithIcon\";\n\nimport signUpSchema from \"../../validators/signUpSchema\";\nimport ButtonWithLoader from \"../../components/ButtonWithLoader\";\nimport { useUnauth } from \"../../hooks/useAuth\";\n\nconst SignUp = () => {\n  useUnauth();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { loading } = useSelector((state) => state.auth);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(signUpSchema),\n  });\n\n  const checkEmail = async (data) => {\n    navigate(\"/verify-code\");\n    // dispatch(checkEmailExists({ email: data.email })).then((response) => {\n    //   if (\n    //     response.payload.success === \"True\" ||\n    //     response.payload.success === true\n    //   ) {\n    //     sendCodeToEmail(data);\n    //   }\n    // });\n  };\n\n  // const sendCodeToEmail = async (data) => {\n  //   dispatch(sendOtp({ email: data.email })).then((response) => {\n  //     if (\n  //       response.payload.success === \"True\" ||\n  //       response.payload.success === true\n  //     ) {\n  //       Toast.success(response.payload.message);\n  //       setTimeout(() => {\n  //         navigate(\"/verify-code\", {\n  //           state: {\n  //             data,\n  //             expires: response.payload?.data[0].expires,\n  //           },\n  //         });\n  //       }, 1500);\n  //     }\n  //   });\n  // };\n\n  return (\n    <div className=\"col-span-7 lg:col-span-3  bg-black text-white flex justify-center items-center lg:items-start flex-col h-screen order-0 lg:order-1 px-3 lg:px-0\">\n      <div className=\"w-full max-w-[430px] pl-[0px] lg:ml-[40px] 2xl:ml-[140px] pr-0 md:pr-10 xl:pr-0\">\n        <div className=\"mb-8\">\n          <button className=\"mb-4\" onClick={() => navigate(-1)}>\n            <BackArrow />\n          </button>\n          <h1 className=\"text-4xl text-center lg:text-left font-extrabold mb-2\">\n            Ready to Use AI50?\n          </h1>\n          <p className=\"text-lg text-center lg:text-left \">Sign Up</p>\n        </div>\n        <form onSubmit={handleSubmit(checkEmail)} className=\"px-2 lg:px-0\">\n          <InputWithIcon\n            icon={EmailSvg}\n            placeholder=\"Full Name\"\n            type=\"text\"\n            {...register(\"full_name\")}\n            error={errors.full_name?.message}\n          />\n          <InputWithIcon\n            icon={EmailSvg}\n            placeholder=\"Email Address\"\n            type=\"email\"\n            {...register(\"email\")}\n            error={errors.email?.message}\n          />\n          <InputWithIcon\n            icon={PasswordSvg}\n            placeholder=\"Password\"\n            type=\"password\"\n            {...register(\"password\")}\n            error={errors.password?.message}\n          />\n          <InputWithIcon\n            icon={PasswordSvg}\n            placeholder=\"Confirm Password\"\n            type=\"password\"\n            {...register(\"confirm_password\")}\n            error={errors.confirm_password?.message}\n          />\n          <ButtonWithLoader isLoading={loading} disabled={loading}>\n            Sign Up\n          </ButtonWithLoader>\n        </form>\n        <p className=\"mt-8 text-xl\">\n          By signing up, you agree to the{\" \"}\n          <Link to=\"#\" className=\"underline\">\n            Terms of Service\n          </Link>{\" \"}\n          and{\" \"}\n          <Link to=\"#\" className=\"underline\">\n            Privacy Policy\n          </Link>\n          .\n        </p>\n\n        <p className=\"my-10 border-t border-gray-400 text-sm text-center mt-5\"></p>\n        <p className=\"text-xl font-semibold\">\n          <Link to=\"/signin\" className=\"underline text-customGreen\">\n            {\"\"}\n            Sign in{\"\"}\n          </Link>\n          {\"\"}\n          &nbsp;If you have an account\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n"],"names":["_ref","isLoading","className","disabled","onClick","children","bgColor","spinnerColor","_jsx","concat","viewBox","useUnauth","yup","full_name","required","email","password","min","confirm_password","oneOf","SignUp","_errors$full_name","_errors$email","_errors$password","_errors$confirm_passw","useDispatch","navigate","useNavigate","loading","useSelector","state","auth","register","handleSubmit","formState","errors","useForm","resolver","yupResolver","signUpSchema","_jsxs","BackArrow","onSubmit","async","InputWithIcon","icon","EmailSvg","placeholder","type","error","message","PasswordSvg","ButtonWithLoader","Link","to"],"sourceRoot":""}