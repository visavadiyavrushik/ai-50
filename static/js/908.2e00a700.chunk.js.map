{"version":3,"file":"static/js/908.2e00a700.chunk.js","mappings":"uKAEA,MA6BA,EA7ByBA,IAQlB,IARmB,UACxBC,EAAS,UACTC,EAAS,SACTC,EAAQ,QACRC,EAAO,SACPC,EAAQ,QACRC,EAAU,iBAAgB,aAC1BC,EAAe,gBAChBP,EACC,OACEQ,EAAAA,EAAAA,KAAA,UACEN,UAAS,GAAAO,OAAKH,EAAO,WAAAG,OAAUH,EAAO,0GAAAG,OAAyGP,GAC/IC,SAAUF,GAAaE,EACvBC,QAASA,EAAQC,SAEhBJ,GACCO,EAAAA,EAAAA,KAAA,OAAKN,UAAU,mCAAkCG,UAC/CG,EAAAA,EAAAA,KAAA,OACEN,UAAS,iCAAAO,OAAmCF,EAAY,wDACxDG,QAAQ,gBAIZL,GAEK,C,8JCzBb,MASA,EAT6BM,EAAAA,GACnB,CACNC,MAAOD,EAAAA,KAEJC,MAAM,uBACNC,SAAS,uBAEbA,W,iCCKH,MAgFA,EAhFuBC,KAAO,IAADC,EAC3B,MAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,OACX,QAAEC,IAAYC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,QAE3C,SACJC,EAAQ,aACRC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYC,KAcxB,OACEvB,EAAAA,EAAAA,KAAA,OAAKN,UAAU,kJAAiJG,UAC9J2B,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,kFAAiFG,SAAA,EAC9F2B,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,OAAMG,SAAA,CAClB,KACDG,EAAAA,EAAAA,KAAA,UAAQN,UAAU,OAAOE,QAASA,IAAMc,GAAU,GAAGb,UACnDG,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,OAEZzB,EAAAA,EAAAA,KAAA,MAAIN,UAAU,wDAAuDG,SAAC,wBAGtEG,EAAAA,EAAAA,KAAA,KAAGN,UAAU,oCAAmCG,SAAC,8DAInD2B,EAAAA,EAAAA,MAAA,QAAME,SAAUT,GA1BLU,UACfnB,GAASoB,EAAAA,EAAAA,IAAeC,IAAOC,MAAMC,IAEJ,SAA7BA,EAASC,QAAQC,UACY,IAA7BF,EAASC,QAAQC,SAEjBC,EAAAA,EAAMD,QAAQF,EAASC,QAAQG,QACjC,GACA,IAkByCtC,SAAA,EACrCG,EAAAA,EAAAA,KAACoC,EAAAA,EAAa,CACZC,KAAMC,EAAAA,EACNC,YAAY,gBACZC,KAAK,WACDxB,EAAS,SACbyB,MAAmB,QAAdlC,EAAEY,EAAOf,aAAK,IAAAG,OAAA,EAAZA,EAAc4B,WAEvBnC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAgB,CAACjD,UAAWmB,EAASjB,SAAUiB,EAAQf,SAAC,eAI3D2B,EAAAA,EAAAA,MAAA,KAAG9B,UAAU,gBAAeG,SAAA,CAAC,kCACK,KAChCG,EAAAA,EAAAA,KAAC2C,EAAAA,GAAI,CAACC,GAAG,IAAIlD,UAAU,YAAWG,SAAC,qBAE3B,IAAI,MACR,KACJG,EAAAA,EAAAA,KAAC2C,EAAAA,GAAI,CAACC,GAAG,IAAIlD,UAAU,YAAWG,SAAC,mBAE5B,QAITG,EAAAA,EAAAA,KAAA,KAAGN,UAAU,wDACb8B,EAAAA,EAAAA,MAAA,KAAG9B,UAAU,iDAAgDG,SAAA,EAC3D2B,EAAAA,EAAAA,MAACmB,EAAAA,GAAI,CACHC,GAAG,UACHlD,UAAU,uDAAsDG,SAAA,CAE/D,GAAG,UACI,GAAG,UACL,IAAI,2CAIZ,C","sources":["components/ButtonWithLoader/index.js","validators/forgotPasswordSchema.js","pages/ForgotPassword/index.js"],"sourcesContent":["import React from \"react\";\n\nconst ButtonWithLoader = ({\n  isLoading,\n  className,\n  disabled,\n  onClick,\n  children,\n  bgColor = \"bg-customGreen\",\n  spinnerColor = \"border-white\",\n}) => {\n  return (\n    <button\n      className={`${bgColor} hover:${bgColor} text-white font-bold mt-[20px] py-2 px-4 rounded w-full flex justify-center items-center text-[22px] ${className}`}\n      disabled={isLoading || disabled}\n      onClick={onClick}\n    >\n      {isLoading ? (\n        <div className=\"flex justify-center items-center\">\n          <svg\n            className={`animate-spin h-5 w-5 border-2 ${spinnerColor} border-opacity-50 border-t-transparent rounded-full`}\n            viewBox=\"0 0 24 24\"\n          ></svg>\n        </div>\n      ) : (\n        children\n      )}\n    </button>\n  );\n};\n\nexport default ButtonWithLoader;\n","import * as yup from \"yup\";\n\nconst forgotPasswordSchema = yup\n  .object({\n    email: yup\n      .string()\n      .email(\"Enter a valid email\")\n      .required(\"Email is required\"),\n  })\n  .required();\n\nexport default forgotPasswordSchema;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { ReactComponent as BackArrow } from \"../../assets/back.svg\";\nimport { ReactComponent as EmailSvg } from \"../../assets/email.svg\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport InputWithIcon from \"../../components/InputWithIcon\";\nimport { Toast } from \"../../utils/Toasts\";\nimport forgotPasswordSchema from \"../../validators/forgotPasswordSchema\";\nimport ButtonWithLoader from \"../../components/ButtonWithLoader\";\nimport { forgotPassword } from \"../../redux/slices/authSlice\";\n\nconst ForgotPassword = () => {\n  const dispatch = useDispatch();\n\n  const navigate = useNavigate();\n  const { loading } = useSelector((state) => state.auth);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(forgotPasswordSchema),\n  });\n\n  const onSubmit = async (data) => {\n    dispatch(forgotPassword(data)).then((response) => {\n      if (\n        response.payload.success === \"True\" ||\n        response.payload.success === true\n      ) {\n        Toast.success(response.payload.message);\n      }\n    });\n  };\n\n  return (\n    <div className=\"col-span-7 lg:col-span-3  bg-black text-white flex justify-center items-center lg:items-start flex-col h-screen order-0 lg:order-1 px-3 lg:px-0\">\n      <div className=\"w-full max-w-[430px] pl-[0px] lg:ml-[40px] 2xl:ml-[140px] pr-0 md:pr-10 xl:pr-0\">\n        <div className=\"mb-8\">\n          {\" \"}\n          <button className=\"mb-4\" onClick={() => navigate(-1)}>\n            <BackArrow />\n          </button>\n          <h1 className=\"text-4xl text-center lg:text-left font-extrabold mb-2\">\n            Ready to Use AI50?\n          </h1>\n          <p className=\"text-lg text-center lg:text-left \">\n            Enter the email address associated with your account.\n          </p>\n        </div>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <InputWithIcon\n            icon={EmailSvg}\n            placeholder=\"Email Address\"\n            type=\"email\"\n            {...register(\"email\")}\n            error={errors.email?.message}\n          />\n          <ButtonWithLoader isLoading={loading} disabled={loading}>\n            Submit\n          </ButtonWithLoader>\n        </form>\n        <p className=\"mt-8 text-xl \">\n          By signing up, you agree to the{\" \"}\n          <Link to=\"#\" className=\"underline\">\n            Terms of Service\n          </Link>{\" \"}\n          and{\" \"}\n          <Link to=\"#\" className=\"underline\">\n            Privacy Policy\n          </Link>\n          .\n        </p>\n\n        <p className=\"my-10 border-t border-gray-400 text-sm text-center\"></p>\n        <p className=\"text-xl font-semibold text-center lg:text-left\">\n          <Link\n            to=\"/signup\"\n            className=\"underline text-customGreen text-center lg:text-left \"\n          >\n            {\"\"}\n            Sign up{\"\"}&nbsp;\n          </Link>{\" \"}\n          If you donâ€™t have an account\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"],"names":["_ref","isLoading","className","disabled","onClick","children","bgColor","spinnerColor","_jsx","concat","viewBox","yup","email","required","ForgotPassword","_errors$email","dispatch","useDispatch","navigate","useNavigate","loading","useSelector","state","auth","register","handleSubmit","formState","errors","useForm","resolver","yupResolver","forgotPasswordSchema","_jsxs","BackArrow","onSubmit","async","forgotPassword","data","then","response","payload","success","Toast","message","InputWithIcon","icon","EmailSvg","placeholder","type","error","ButtonWithLoader","Link","to"],"sourceRoot":""}